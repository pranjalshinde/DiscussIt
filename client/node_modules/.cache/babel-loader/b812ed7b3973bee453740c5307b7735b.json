{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/ChannelInner.jsx\";\nimport React, { useState } from 'react';\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\nimport { ChannelInfo } from '../assets';\nexport const GiphyContext = React.createContext({});\n\nconst ChannelInner = _ref => {\n  let {\n    setIsEditing\n  } = _ref;\n  const [giphyState, setGiphyState] = useState(false);\n  const {\n    sendMessage\n  } = useChannelActionContext();\n\n  const overrideSubmitHandler = message => {\n    var _message$parent;\n\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: (_message$parent = message.parent) === null || _message$parent === void 0 ? void 0 : _message$parent.id,\n      parent: message.parent,\n      text: message.text\n    };\n\n    if (giphyState) {\n      updatedMessage = { ...updatedMessage,\n        text: `/giphy ${message.text}`\n      };\n    }\n\n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(GiphyContext.Provider, {\n    value: {\n      giphyState,\n      setGiphyState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Window, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TeamChannelHeader, {\n    setIsEditing: setIsEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MessageList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MessageInput, {\n    overrideSubmitHandler: overrideSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Thread, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst TeamChannelHeader = _ref2 => {\n  let {\n    setIsEditing\n  } = _ref2;\n  const {\n    channel,\n    watcher_count\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n\n  const MessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(_ref3 => {\n      let {\n        user\n      } = _ref3;\n      return user.id !== client.userID;\n    });\n    const additionalMembers = members.length - 3;\n\n    if (channel.type === 'messaging') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"team-channel-header__name-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, members.map((_ref4, i) => {\n        let {\n          user\n        } = _ref4;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          className: \"team-channel-header__name-multi\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          image: user.image,\n          name: user.fullName || user.id,\n          size: 32,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"team-channel-header__name user\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }, user.fullName || user.id));\n      }), additionalMembers > 0 && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"team-channel-header__name user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 39\n        }\n      }, \"and \", additionalMembers, \" more\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-channel-header__channel-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"team-channel-header__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"# \", channel.data.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'flex'\n      },\n      onClick: () => setIsEditing(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChannelInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const getWatcherText = watchers => {\n    if (!watchers) return 'No users online';\n    if (watchers === 1) return '1 user online';\n    return `${watchers} users online`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team-channel-header__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MessagingHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team-channel-header__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"team-channel-header__right-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, getWatcherText(watcher_count))));\n};\n\nexport default ChannelInner;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/ChannelInner.jsx"],"names":["React","useState","MessageList","MessageInput","Thread","Window","useChannelActionContext","Avatar","useChannelStateContext","useChatContext","ChannelInfo","GiphyContext","createContext","ChannelInner","setIsEditing","giphyState","setGiphyState","sendMessage","overrideSubmitHandler","message","updatedMessage","attachments","mentioned_users","parent_id","parent","id","text","display","width","TeamChannelHeader","channel","watcher_count","client","MessagingHeader","members","Object","values","state","filter","user","userID","additionalMembers","length","type","map","i","image","fullName","data","name","getWatcherText","watchers"],"mappings":"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","sourcesContent":["   \nimport React, { useState } from 'react';\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\n\nimport { ChannelInfo } from '../assets';\n\nexport const GiphyContext = React.createContext({});\n\nconst ChannelInner = ({ setIsEditing }) => {\n  const [giphyState, setGiphyState] = useState(false);\n  const { sendMessage } = useChannelActionContext();\n  \n  const overrideSubmitHandler = (message) => {\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: message.parent?.id,\n      parent: message.parent,\n      text: message.text,\n    };\n    \n    if (giphyState) {\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\n    }\n    \n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return (\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\n      <div style={{ display: 'flex', width: '100%' }}>\n        <Window>\n          <TeamChannelHeader setIsEditing={setIsEditing} />\n          <MessageList />\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\n        </Window>\n        <Thread />\n      </div>\n    </GiphyContext.Provider>\n  );\n};\n\nconst TeamChannelHeader = ({ setIsEditing }) => {\n    const { channel, watcher_count } = useChannelStateContext();\n    const { client } = useChatContext();\n  \n    const MessagingHeader = () => {\n      const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n      const additionalMembers = members.length - 3;\n  \n      if(channel.type === 'messaging') {\n        return (\n          <div className='team-channel-header__name-wrapper'>\n            {members.map(({ user }, i) => (\n              <div key={i} className='team-channel-header__name-multi'>\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\n                <p className='team-channel-header__name user'>{user.fullName || user.id}</p>\n              </div>\n            ))}\n  \n            {additionalMembers > 0 && <p className='team-channel-header__name user'>and {additionalMembers} more</p>}\n          </div>\n        );\n      }\n  \n      return (\n        <div className='team-channel-header__channel-wrapper'>\n          <p className='team-channel-header__name'># {channel.data.name}</p>\n          <span style={{ display: 'flex' }} onClick={() => setIsEditing(true)}>\n            <ChannelInfo />\n          </span>\n        </div>\n      );\n    };\n  \n    const getWatcherText = (watchers) => {\n      if (!watchers) return 'No users online';\n      if (watchers === 1) return '1 user online';\n      return `${watchers} users online`;\n    };\n  \n    return (\n      <div className='team-channel-header__container'>\n        <MessagingHeader />\n        <div className='team-channel-header__right'>\n          <p className='team-channel-header__right-text'>{getWatcherText(watcher_count)}</p>\n        </div>\n      </div>\n    );\n  };\n\n  export default ChannelInner;\n"]},"metadata":{},"sourceType":"module"}