{"ast":null,"code":"// import React, {useState} from 'react'\n// import { ChannelContainer, ChannelList, useChatContext } from 'stream-chat-react';\n// import Cookies from 'universal-cookie';\n// import { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\n// import ChatAppIcon from '../assets/ChatApp.png';\n// import LogoutIcon from '../assets/logout.png';\n// import { initialState } from 'stream-chat-react/dist/components/Channel/channelState';\n// const cookies = new Cookies();\n// const Sidebar = ({logout}) => (\n//     <div className=\"channel-list__sidebar\">\n//         <div className=\"channel-list__sidebar__icon1\">\n//             <div className=\"icon1__inner\">\n//                 <img src= {ChatAppIcon} alt=\"ChatApp\" width= \"30\"/>\n//             </div>\n//         </div>\n//         <div className=\"channel-list__sidebar__icon2\">\n//             <div className=\"icon1__inner\" onClick={logout}>\n//                 <img src= {LogoutIcon} alt=\"Logout\" width= \"30\"/>\n//             </div>\n//         </div>\n//     </div>\n// );\n// const CompanyHeader = () => (\n//     <div className=\"channel-list__header\">\n//         <p className=\"channel-list__header__text\">DiscussIt</p>\n//     </div>\n// );\n// const customChannelTeamFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'team');\n// }\n// const customChannelMessagingFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'messaging');\n// }\n// const ChannelListContent = ({isCreating, setIsCreating ,setCreateType ,setIsEditing}) => {\n//     const {client} = useChatContext();\n//     const logout = () => {\n//         cookies.remove('token');\n//         cookies.remove('userId');\n//         cookies.remove('userName');\n//         cookies.remove('fullName');\n//         cookies.remove('avatarURL');\n//         cookies.remove('hashedPassword');\n//         cookies.remove('phoneNumber');\n//         window.location.reload();\n//     }\n//     const filters = {members: { $in: [client.userID]}};\n//     return (\n//         <>\n//             <Sidebar logout={logout}/>\n//             <div className=\"channel-list__list__wrapper\">\n//                 <CompanyHeader/>\n//                 <ChannelSearch/>\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelTeamFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n//                             type=\"team\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing} \n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"team\" \n//                         />\n//                     )}\n//                 />\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelMessagingFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n//                             type=\"messaging\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing}\n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"messaging\"   \n//                         />\n//                     )}\n//                 />\n//             </div>\n//         </>\n//     )\n// }\n// const ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing}) => {\n//     const [toggleContainer, setToggleContainer] = useState(false);\n//     return (\n//         <>\n//             <div className=\"channel-list__container\">\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                 />\n//             </div>\n//             <div className=\"channel-list__container-responsive\"\n//                 style={{left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}>\n//                 <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !(prevToggleContainer))}></div>\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                     setToggleContainer={setToggleContainer}\n//                 />\n//             </div>\n//         </>\n//     )\n// }\n// export default ChannelListContainer","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/ChannelListContainer.jsx"],"names":[],"mappingssourcesContent":["// import React, {useState} from 'react'\n// import { ChannelContainer, ChannelList, useChatContext } from 'stream-chat-react';\n// import Cookies from 'universal-cookie';\n\n// import { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\n// import ChatAppIcon from '../assets/ChatApp.png';\n// import LogoutIcon from '../assets/logout.png';\n// import { initialState } from 'stream-chat-react/dist/components/Channel/channelState';\n\n// const cookies = new Cookies();\n\n// const Sidebar = ({logout}) => (\n//     <div className=\"channel-list__sidebar\">\n//         <div className=\"channel-list__sidebar__icon1\">\n//             <div className=\"icon1__inner\">\n//                 <img src= {ChatAppIcon} alt=\"ChatApp\" width= \"30\"/>\n//             </div>\n//         </div>\n//         <div className=\"channel-list__sidebar__icon2\">\n//             <div className=\"icon1__inner\" onClick={logout}>\n//                 <img src= {LogoutIcon} alt=\"Logout\" width= \"30\"/>\n//             </div>\n//         </div>\n//     </div>\n\n    \n// );\n\n// const CompanyHeader = () => (\n//     <div className=\"channel-list__header\">\n//         <p className=\"channel-list__header__text\">DiscussIt</p>\n//     </div>\n// );\n    \n// const customChannelTeamFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'team');\n// }\n// const customChannelMessagingFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'messaging');\n// }\n\n// const ChannelListContent = ({isCreating, setIsCreating ,setCreateType ,setIsEditing}) => {\n//     const {client} = useChatContext();\n\n//     const logout = () => {\n//         cookies.remove('token');\n//         cookies.remove('userId');\n//         cookies.remove('userName');\n//         cookies.remove('fullName');\n//         cookies.remove('avatarURL');\n//         cookies.remove('hashedPassword');\n//         cookies.remove('phoneNumber');\n\n//         window.location.reload();\n//     }\n    \n//     const filters = {members: { $in: [client.userID]}};\n\n//     return (\n//         <>\n//             <Sidebar logout={logout}/>\n//             <div className=\"channel-list__list__wrapper\">\n//                 <CompanyHeader/>\n//                 <ChannelSearch/>\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelTeamFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n                            \n//                             type=\"team\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing} \n                            \n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"team\" \n                            \n//                         />\n//                     )}\n//                 />\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelMessagingFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n//                             type=\"messaging\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing}\n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"messaging\"   \n//                         />\n//                     )}\n//                 />\n//             </div>\n//         </>\n//     )\n// }\n\n// const ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing}) => {\n//     const [toggleContainer, setToggleContainer] = useState(false);\n\n//     return (\n//         <>\n//             <div className=\"channel-list__container\">\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                 />\n//             </div>\n\n//             <div className=\"channel-list__container-responsive\"\n//                 style={{left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}>\n//                 <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !(prevToggleContainer))}></div>\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                     setToggleContainer={setToggleContainer}\n//                 />\n//             </div>\n//         </>\n//     )\n\n// }\n\n// export default ChannelListContainer\n"]},"metadata":{},"sourceType":"module"}