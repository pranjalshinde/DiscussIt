{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/UserList.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar, useChatContext, UserItem } from \"stream-chat-react\";\nimport { InviteIcon } from \"../assets\";\n\nconst ListContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-list__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-list__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Invite\")), children);\n};\n\nconst userItem = _ref2 => {\n  let {\n    user\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-item__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-item__name-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    image: user.image,\n    name: user.fullName || user.id,\n    size: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst UserList = () => {\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n  return /*#__PURE__*/React.createElement(ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-list__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }\n  }, \"Loading users...\") : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/React.createElement(UserItem, {\n    index: i,\n    key: user.id,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  })));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","UserItem","InviteIcon","ListContainer","children","userItem","user","image","fullName","id","UserList","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","getUsers","response","queryUsers","$ne","userID","limit","length","error","console","log","map","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Avatar, useChatContext, UserItem } from \"stream-chat-react\";\n\nimport { InviteIcon } from \"../assets\";\n\nconst ListContainer = ( { children }) => {\n\n    return(\n        <div className=\"user-list__container\">\n            <div className=\"user-list__header\">\n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n\n}\n\nconst userItem = ({user}) => {\n    return (\n        <div className=\"user-item__wrapper\">\n            <div className=\"user-item__name-wrapper\">\n                <Avatar image={user.image} name={user.fullName || user.id} size={32}/>\n            </div>\n            <p></p>\n        </div>\n    )\n}\n\nconst UserList = () => {\n    const {client} = useChatContext();\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [listEmpty, setListEmpty] = useState(false);\n\n    useEffect(() => {\n        const getUsers = async () => {\n            if(loading) return;\n            setLoading(true);\n\n            try{\n                const response = await client.queryUsers(\n                    {id: {$ne: client.userID}},\n                    {id: 1 },\n                    {limit: 8}\n                );\n                if(response.users.length) {\n                    setUsers(response.users);\n                }\n                else{\n                    setListEmpty(true);\n                }\n            }catch(error){\n                console.log(error);\n            }\n            setLoading(false);\n        }\n        if(client) getUsers();\n    }, [])\n\n  \n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading users...\n            </div> : (\n                users?.map((user, i) => (\n                  <UserItem index={i} key={user.id} user={user}/>  \n                ))\n            )}\n        </ListContainer>\n    )\n       \n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}