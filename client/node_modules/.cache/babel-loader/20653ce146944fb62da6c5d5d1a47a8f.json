{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/ChannelListContainer.jsx\";\nimport React from 'react';\nimport { ChannelContainer, ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport ChatAppIcon from '../assets/ChatApp.png';\nimport LogoutIcon from '../assets/logout.png';\nconst cookies = new Cookies();\n\nconst Sidebar = _ref => {\n  let {\n    logout\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar__icon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon1__inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ChatAppIcon,\n    alt: \"ChatApp\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar__icon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon1__inner\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LogoutIcon,\n    alt: \"Logout\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }))));\n};\n\nconst CompanyHeader = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"channel-list__header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"channel-list__header__text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, \"DiscussIt\"));\n\nconst customChannelTeamFilter = channels => {\n  return channels.filter(channel => channel.type == 'team');\n};\n\nconst customChannelMessagingFilter = channels => {\n  return channels.filter(channel => channel.type == 'messaging');\n};\n\nconst ChannelListContent = _ref2 => {\n  let {\n    isCreating,\n    setIsCreating,\n    setCreateType,\n    setIsEditing\n  } = _ref2;\n\n  const logout = () => {\n    cookies.remove('token');\n    cookies.remove('userId');\n    cookies.remove('userName');\n    cookies.remove('fullName');\n    cookies.remove('avatarURL');\n    cookies.remove('hashedPassword');\n    cookies.remove('phoneNumber');\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sidebar, {\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__list__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CompanyHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelList, {\n    filters: {},\n    channelRenderFilterFn: customChannelTeamFilter,\n    List: listProps => /*#__PURE__*/React.createElement(TeamChannelList, Object.assign({}, listProps, {\n      type: \"team\",\n      isCreating: isCreating,\n      setIsCreating: setIsCreating,\n      setCreateType: setCreateType,\n      setIsEditing: setIsEditing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    })),\n    Preview: previewProps => /*#__PURE__*/React.createElement(TeamChannelPreview, Object.assign({}, previewProps, {\n      type: \"team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelList, {\n    filters: {},\n    channelRenderFilterFn: customChannelMessagingFilter,\n    List: listProps => /*#__PURE__*/React.createElement(TeamChannelList, Object.assign({}, listProps, {\n      type: \"messaging\",\n      isCreating: isCreating,\n      setIsCreating: setIsCreating,\n      setCreateType: setCreateType,\n      setIsEditing: setIsEditing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })),\n    Preview: previewProps => /*#__PURE__*/React.createElement(TeamChannelPreview, Object.assign({}, previewProps, {\n      type: \"messaging\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst ChannelListContainer = _ref3 => {\n  let {\n    setCreateType,\n    se\n  } = _ref3;\n};\n\nexport default ChannelListContainer;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/ChannelListContainer.jsx"],"names":["React","ChannelContainer","ChannelList","useChatContext","Cookies","ChannelSearch","TeamChannelList","TeamChannelPreview","ChatAppIcon","LogoutIcon","cookies","Sidebar","logout","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","isCreating","setIsCreating","setCreateType","setIsEditing","remove","window","location","reload","listProps","previewProps","ChannelListContainer","se"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ChannelContainer, ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport ChatAppIcon from '../assets/ChatApp.png';\nimport LogoutIcon from '../assets/logout.png';\n\nconst cookies = new Cookies();\n\nconst Sidebar = ({logout}) => (\n    <div className=\"channel-list__sidebar\">\n        <div className=\"channel-list__sidebar__icon1\">\n            <div className=\"icon1__inner\">\n                <img src= {ChatAppIcon} alt=\"ChatApp\" width= \"30\"/>\n            </div>\n        </div>\n        <div className=\"channel-list__sidebar__icon2\">\n            <div className=\"icon1__inner\" onClick={logout}>\n                <img src= {LogoutIcon} alt=\"Logout\" width= \"30\"/>\n            </div>\n        </div>\n    </div>\n\n    \n);\n\nconst CompanyHeader = () => (\n    <div className=\"channel-list__header\">\n        <p className=\"channel-list__header__text\">DiscussIt</p>\n    </div>\n);\n    \nconst customChannelTeamFilter = (channels) => {\n    return channels.filter((channel) => channel.type == 'team');\n}\nconst customChannelMessagingFilter = (channels) => {\n    return channels.filter((channel) => channel.type == 'messaging');\n}\n\nconst ChannelListContent = ({isCreating, setIsCreating ,setCreateType ,setIsEditing}) => {\n\n    const logout = () => {\n        cookies.remove('token');\n        cookies.remove('userId');\n        cookies.remove('userName');\n        cookies.remove('fullName');\n        cookies.remove('avatarURL');\n        cookies.remove('hashedPassword');\n        cookies.remove('phoneNumber');\n\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <Sidebar logout={logout}/>\n            <div className=\"channel-list__list__wrapper\">\n                <CompanyHeader/>\n                <ChannelSearch/>\n                <ChannelList \n                    filters={{}}\n                    channelRenderFilterFn={customChannelTeamFilter}\n                    List= {(listProps) => (\n                        <TeamChannelList\n                            {...listProps}\n                            \n                            type=\"team\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType}\n                            setIsEditing={setIsEditing} \n                            \n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview\n                            {...previewProps} \n                            type=\"team\" \n                            \n                        />\n                    )}\n                />\n                <ChannelList \n                    filters={{}}\n                    channelRenderFilterFn={customChannelMessagingFilter}\n                    List= {(listProps) => (\n                        <TeamChannelList\n                            {...listProps}\n                            type=\"messaging\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType}\n                            setIsEditing={setIsEditing}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview\n                            {...previewProps} \n                            type=\"messaging\"   \n                        />\n                    )}\n                />\n            </div>\n        </>\n    )\n}\n\nconst ChannelListContainer = ({ setCreateType, se}) => {\n\n}\n\nexport default ChannelListContainer\n"]},"metadata":{},"sourceType":"module"}