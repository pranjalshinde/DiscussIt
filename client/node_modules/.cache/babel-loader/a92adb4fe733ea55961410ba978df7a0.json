{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/ChannelSearch.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getChannel, useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets';\n\nconst ChannelSearch = () => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const getChannel = async text => {\n    try {//Todo : fetch channels\n    } catch (error) {\n      setQuery('');\n    }\n  };\n\n  const onSearch = event => {\n    event.preventDefault();\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-search__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-search__input__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-search__input__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"channel-search__input__text\",\n    placeholder: \"Search\",\n    type: \"text\",\n    value: query,\n    onChange: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ChannelSearch;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/ChannelSearch.jsx"],"names":["React","useState","useEffect","getChannel","useChatContext","SearchIcon","ChannelSearch","query","setQuery","loading","setLoading","text","error","onSearch","event","preventDefault","target","value","getChannels"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,mBAA3C;AAEA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAME,UAAU,GAAG,MAAOQ,IAAP,IAAgB;AAC/B,QAAG,CACC;AACH,KAFD,CAGA,OAAOC,KAAP,EAAc;AACVJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAPD;;AASA,QAAMK,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAACM,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAC,IAAAA,WAAW,CAACJ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AACI,IAAA,SAAS,EAAC,6BADd;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAEV,KAJX;AAKI,IAAA,QAAQ,EAAEM,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAgBH,CAtCD;;AAwCA,eAAeP,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { getChannel, useChatContext } from 'stream-chat-react';\n\nimport { SearchIcon } from '../assets';\n\nconst ChannelSearch = () => {\n\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const getChannel = async (text) => {\n        try{\n            //Todo : fetch channels\n        }\n        catch (error) {\n            setQuery('');\n        }\n    }\n\n    const onSearch = (event) => {\n        event.preventDefault();\n\n        setLoading(true);\n        setQuery(event.target.value);\n        getChannels(event.target.value);\n    }\n\n    return (\n        <div className=\"channel-search__container\">\n            <div className=\"channel-search__input__wrapper\">\n                <div className=\"channel-search__input__icon\">\n                    <SearchIcon />\n                </div>\n                <input \n                    className=\"channel-search__input__text\"\n                    placeholder=\"Search\"\n                    type=\"text\"\n                    value={query}\n                    onChange={onSearch}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelSearch\n\n"]},"metadata":{},"sourceType":"module"}