{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/App.jsx\";\nimport React from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelContainer, ChannelListContainer, Auth } from './components';\nimport './App.css';\nconst cookies = new Cookies();\nconst apiKey = 'nr5cxj6kt3gc';\nconst authToken = cookies.get('token');\nconst client = StreamChat.getInstance(apiKey);\n\nif (authToken) {\n  client.connectUser({\n    token: cookies.get('token'),\n    userName: cookies.get('userName'),\n    fullName: cookies.get('fullName'),\n    phoneNumber: cookies.get('phoneNumber'),\n    avatarURL: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword')\n  });\n}\n\nconst App = () => {\n  if (!authToken) return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    client: client,\n    theme: \"team light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChannelListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/App.jsx"],"names":["React","StreamChat","Chat","Cookies","ChannelContainer","ChannelListContainer","Auth","cookies","apiKey","authToken","get","client","getInstance","connectUser","token","userName","fullName","phoneNumber","avatarURL","hashedPassword","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,SAASC,gBAAT,EAA2BC,oBAA3B,EAAiDC,IAAjD,QAA6D,cAA7D;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AAEA,MAAMK,MAAM,GAAG,cAAf;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAlB;AAEA,MAAMC,MAAM,GAAGV,UAAU,CAACW,WAAX,CAAuBJ,MAAvB,CAAf;;AAEA,IAAGC,SAAH,EAAc;AACVE,EAAAA,MAAM,CAACE,WAAP,CAAmB;AACfC,IAAAA,KAAK,EAAEP,OAAO,CAACG,GAAR,CAAY,OAAZ,CADQ;AAEfK,IAAAA,QAAQ,EAAER,OAAO,CAACG,GAAR,CAAY,UAAZ,CAFK;AAGfM,IAAAA,QAAQ,EAAET,OAAO,CAACG,GAAR,CAAY,UAAZ,CAHK;AAKfO,IAAAA,WAAW,EAAEV,OAAO,CAACG,GAAR,CAAY,aAAZ,CALE;AAMfQ,IAAAA,SAAS,EAAEX,OAAO,CAACG,GAAR,CAAY,WAAZ,CANI;AAOfS,IAAAA,cAAc,EAAEZ,OAAO,CAACG,GAAR,CAAY,gBAAZ;AAPD,GAAnB;AASH;;AAED,MAAMU,GAAG,GAAG,MAAM;AACd,MAAG,CAACX,SAAJ,EAAe,oBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACf,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEE,MAAd;AAAsB,IAAA,KAAK,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CAVD;;AAYA,eAAeS,GAAf","sourcesContent":["import React from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\n\nimport { ChannelContainer, ChannelListContainer, Auth } from './components';\n\nimport './App.css';\n\nconst cookies = new Cookies();\n\nconst apiKey = 'nr5cxj6kt3gc';\nconst authToken = cookies.get('token');\n\nconst client = StreamChat.getInstance(apiKey);\n\nif(authToken) {\n    client.connectUser({\n        token: cookies.get('token'),\n        userName: cookies.get('userName'),\n        fullName: cookies.get('fullName'),\n        \n        phoneNumber: cookies.get('phoneNumber'),\n        avatarURL: cookies.get('avatarURL'),\n        hashedPassword: cookies.get('hashedPassword')\n    })\n}\n\nconst App = () => {\n    if(!authToken) return <Auth/> \n    return (\n        <div className=\"app__wrapper\">\n            <Chat client={client} theme=\"team light\">\n                <ChannelListContainer/>\n                <ChannelContainer/>\n            </Chat>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}