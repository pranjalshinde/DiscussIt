{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/CreateChannel.jsx\";\n// import React, {useState} from 'react';\n// import {useChatContext}  from 'stream-chat-react';\n// import {UserList} from './';\n// import { CloseCreateChannel } from '../assets';\n// const ChannelNameInput = ({ channelName = '', setChannelName }) => {\n//     const handleChange = (event) => {\n//         event.preventDefault();\n//         setChannelName(event.target.value);\n//     }\n//     return (\n//         <div className=\"channel-name-input__wrapper\">\n//             <p>Name</p>\n//             <input value={channelName} onChange={handleChange} placeholder=\"channel-name\"/>\n//             <p>Add Members</p>\n//         </div>\n//     )\n// }\n// const CreateChannel = ({createType, setIsCreating}) => {\n//     const {client, setActiveChannel} = useChatContext();\n//     const[selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n//     const [channelName, setChannelName] = useState('');\n//     const createChannel = async (e) => {\n//         e.preventDefault();\n//         try{\n//             const newChannel = await client.channel(createType, channelName, {name: channelName, members: selectedUsers});\n//             await newChannel.watch();\n//             setChannelName('');\n//             setIsCreating(false);\n//             setSelectedUsers([client.userID]);\n//             setActiveChannel(newChannel);\n//         }catch(error){\n//             console.log(error);\n//         }\n//     }\n//     return (\n//         <div className=\"create-channel__container\">\n//             <div className=\"create-channel__header\">\n//                 <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n//                 <CloseCreateChannel setIsCreating={setIsCreating}/>\n//             </div>\n//             {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n//             <UserList setSelectedUsers={selectedUsers}/>\n//             <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\n//                 <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\n//             </div>\n//         </div>\n//     )\n// }\n// export default CreateChannel\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\n\nconst ChannelNameInput = _ref => {\n  let {\n    channelName = '',\n    setChannelName\n  } = _ref;\n\n  const handleChange = event => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-name-input__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: channelName,\n    onChange: handleChange,\n    placeholder: \"channel-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Add Members\"));\n};\n\nconst CreateChannel = _ref2 => {\n  let {\n    createType,\n    setIsCreating\n  } = _ref2;\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n  const [channelName, setChannelName] = useState('');\n\n  const createChannel = async e => {\n    e.preventDefault();\n\n    try {\n      const newChannel = await client.channel(createType, channelName, {\n        name: channelName,\n        members: selectedUsers\n      });\n      await newChannel.watch();\n      setChannelName('');\n      setIsCreating(false);\n      setSelectedUsers([client.userID]);\n      setActiveChannel(newChannel);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-channel__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-channel__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'), /*#__PURE__*/React.createElement(CloseCreateChannel, {\n    setIsCreating: setIsCreating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })), createType === 'team' && /*#__PURE__*/React.createElement(ChannelNameInput, {\n    channelName: channelName,\n    setChannelName: setChannelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(UserList, {\n    setSelectedUsers: setSelectedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-channel__button-wrapper\",\n    onClick: createChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, createType === 'team' ? 'Create Channel' : 'Create Message Group')));\n};\n\nexport default CreateChannel;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/CreateChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","CreateChannel","createType","setIsCreating","client","setActiveChannel","selectedUsers","setSelectedUsers","userID","createChannel","e","newChannel","channel","name","members","watch","error","console","log"],"mappings":"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","sourcesContent":["// import React, {useState} from 'react';\n// import {useChatContext}  from 'stream-chat-react';\n\n// import {UserList} from './';\n// import { CloseCreateChannel } from '../assets';\n\n// const ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    \n    \n\n//     const handleChange = (event) => {\n//         event.preventDefault();\n\n//         setChannelName(event.target.value);\n//     }\n//     return (\n//         <div className=\"channel-name-input__wrapper\">\n//             <p>Name</p>\n//             <input value={channelName} onChange={handleChange} placeholder=\"channel-name\"/>\n//             <p>Add Members</p>\n\n//         </div>\n//     )\n// }\n\n// const CreateChannel = ({createType, setIsCreating}) => {\n//     const {client, setActiveChannel} = useChatContext();\n//     const[selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n//     const [channelName, setChannelName] = useState('');\n\n//     const createChannel = async (e) => {\n//         e.preventDefault();\n\n//         try{\n//             const newChannel = await client.channel(createType, channelName, {name: channelName, members: selectedUsers});\n//             await newChannel.watch();\n//             setChannelName('');\n//             setIsCreating(false);\n//             setSelectedUsers([client.userID]);\n//             setActiveChannel(newChannel);\n//         }catch(error){\n//             console.log(error);\n//         }\n//     }\n\n//     return (\n//         <div className=\"create-channel__container\">\n//             <div className=\"create-channel__header\">\n//                 <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n//                 <CloseCreateChannel setIsCreating={setIsCreating}/>\n//             </div>\n//             {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n               \n           \n//             <UserList setSelectedUsers={selectedUsers}/>\n//             <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\n//                 <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default CreateChannel\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Name</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\n            <p>Add Members</p>\n        </div>\n    )\n}\n\nconst CreateChannel = ({ createType, setIsCreating }) => {\n    const { client, setActiveChannel } = useChatContext();\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || ''])\n    const [channelName, setChannelName] = useState('');\n\n    const createChannel = async (e) => {\n        e.preventDefault();\n\n        try {\n            const newChannel = await client.channel(createType, channelName, {\n                name: channelName, members: selectedUsers\n            });\n\n            await newChannel.watch();\n\n            setChannelName('');\n            setIsCreating(false);\n            setSelectedUsers([client.userID]);\n            setActiveChannel(newChannel);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className=\"create-channel__container\">\n            <div className=\"create-channel__header\">\n                <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n                <CloseCreateChannel setIsCreating={setIsCreating} />\n            </div>\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n            <UserList setSelectedUsers={setSelectedUsers} />\n            <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\n                <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateChannel"]},"metadata":{},"sourceType":"module"}