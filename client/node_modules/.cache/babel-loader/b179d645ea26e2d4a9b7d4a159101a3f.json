{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/TeamChannelPreview.jsx\";\nimport React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nconst TeamChannelPreview = _ref => {\n  let {\n    setActiveChannel,\n    setIsCreating,\n    setIsEditing,\n    setToggleContainer,\n    channel,\n    type\n  } = _ref;\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n\n  const ChannelPreview = () => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"channel-preview__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  });\n\n  const DirectPreview = () => {\n    var _members$, _members$$user, _members$2, _members$2$user, _members$3, _members$3$user, _members$4, _members$4$user, _members$5, _members$5$user;\n\n    const members = Object.values(channel.state.members).filter(_ref2 => {\n      let {\n        user\n      } = _ref2;\n      return user.id != client.userID;\n    });\n    console.log(members[0]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channel-preview__item single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      image: (_members$ = members[0]) === null || _members$ === void 0 ? void 0 : (_members$$user = _members$.user) === null || _members$$user === void 0 ? void 0 : _members$$user.image,\n      name: ((_members$2 = members[0]) === null || _members$2 === void 0 ? void 0 : (_members$2$user = _members$2.user) === null || _members$2$user === void 0 ? void 0 : _members$2$user.fullName) || ((_members$3 = members[0]) === null || _members$3 === void 0 ? void 0 : (_members$3$user = _members$3.user) === null || _members$3$user === void 0 ? void 0 : _members$3$user.name),\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, ((_members$4 = members[0]) === null || _members$4 === void 0 ? void 0 : (_members$4$user = _members$4.user) === null || _members$4$user === void 0 ? void 0 : _members$4$user.fullName) || ((_members$5 = members[0]) === null || _members$5 === void 0 ? void 0 : (_members$5$user = _members$5.user) === null || _members$5$user === void 0 ? void 0 : _members$5$user.name)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? 'channel-preview__wrapper__selected' : 'channel-preview__wrapper',\n    onClick: () => {\n      setIsCreating(false);\n      setIsEditing(false);\n      setActiveChannel(channel);\n\n      if (setToggleContainer) {\n        setToggleContainer(prevState => !prevState);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, type === 'team' ? /*#__PURE__*/React.createElement(ChannelPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(DirectPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 52\n    }\n  }));\n};\n\nexport default TeamChannelPreview;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/TeamChannelPreview.jsx"],"names":["React","Avatar","useChatContext","TeamChannelPreview","setActiveChannel","setIsCreating","setIsEditing","setToggleContainer","channel","type","activeChannel","client","ChannelPreview","DirectPreview","members","Object","values","state","filter","user","id","userID","console","log","image","fullName","name","prevState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,mBAAvC;;AAEA,MAAMC,kBAAkB,GAAG,QAAwF;AAAA,MAAvF;AAACC,IAAAA,gBAAD;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA,YAAlC;AAAgDC,IAAAA,kBAAhD;AAAoEC,IAAAA,OAApE;AAA6EC,IAAAA;AAA7E,GAAuF;AAC/G,QAAM;AAACD,IAAAA,OAAO,EAAEE,aAAV;AAAyBC,IAAAA;AAAzB,MAAoCT,cAAc,EAAxD;;AAEA,QAAMU,cAAc,GAAG,mBACnB;AAAG,IAAA,SAAS,EAAE,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,UAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcR,OAAO,CAACS,KAAR,CAAcH,OAA5B,EAAqCI,MAArC,CAA4C;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAYA,IAAI,CAACC,EAAL,IAAWT,MAAM,CAACU,MAA9B;AAAA,KAA5C,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAAC,CAAD,CAAnB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,eAAEA,OAAO,CAAC,CAAD,CAAT,gEAAE,UAAYK,IAAd,mDAAE,eAAkBK,KAD7B;AAEI,MAAA,IAAI,EAAE,eAAAV,OAAO,CAAC,CAAD,CAAP,6EAAYK,IAAZ,oEAAkBM,QAAlB,oBAA8BX,OAAO,CAAC,CAAD,CAArC,kEAA8B,WAAYK,IAA1C,oDAA8B,gBAAkBO,IAAhD,CAFV;AAGI,MAAA,IAAI,EAAE,EAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,eAAAZ,OAAO,CAAC,CAAD,CAAP,6EAAYK,IAAZ,oEAAkBM,QAAlB,oBAA8BX,OAAO,CAAC,CAAD,CAArC,kEAA8B,WAAYK,IAA1C,oDAA8B,gBAAkBO,IAAhD,CAAJ,CANJ,CADJ;AAUH,GAbD;;AAcA,sBACI;AAAK,IAAA,SAAS,EACV,CAAAlB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEY,EAAT,OAAgBV,aAAhB,aAAgBA,aAAhB,uBAAgBA,aAAa,CAAEU,EAA/B,IACE,oCADF,GAEE,0BAHN;AAKA,IAAA,OAAO,EAAE,MAAM;AACXf,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,gBAAgB,CAACI,OAAD,CAAhB;;AACA,UAAGD,kBAAH,EAAsB;AAClBA,QAAAA,kBAAkB,CAAEoB,SAAD,IAAe,CAACA,SAAjB,CAAlB;AACH;AACJ,KAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKlB,IAAI,KAAK,MAAT,gBAAkB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAAsC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAd3C,CADJ;AAkBH,CA1CD;;AA4CA,eAAeN,kBAAf","sourcesContent":["import React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nconst TeamChannelPreview = ({setActiveChannel ,setIsCreating, setIsEditing ,setToggleContainer ,channel, type}) => {\n    const {channel: activeChannel, client } = useChatContext();\n\n    const ChannelPreview = () => (\n        <p className =\"channel-preview__item\">\n            {/* # {channel?.data?.name || channel?.data?.id} */}\n        </p>\n    );\n    \n\n    const DirectPreview = () => {\n        const members = Object.values(channel.state.members).filter(({user}) => user.id != client.userID);\n        console.log(members[0]);\n        return (\n            <div className=\"channel-preview__item single\">\n                <Avatar\n                    image={members[0]?.user?.image}\n                    name={members[0]?.user?.fullName || members[0]?.user?.name}\n                    size={24}\n                />\n                <p>{members[0]?.user?.fullName || members[0]?.user?.name}</p>\n            </div>\n        )\n    }\n    return (\n        <div className={\n            channel?.id === activeChannel?.id\n            ? 'channel-preview__wrapper__selected'\n            : 'channel-preview__wrapper'\n        }\n        onClick={() => {\n            setIsCreating(false);\n            setIsEditing(false);\n            setActiveChannel(channel);\n            if(setToggleContainer){\n                setToggleContainer((prevState) => !prevState)\n            }\n        }}\n        >\n            {type === 'team' ? <ChannelPreview/> : <DirectPreview/> }\n        </div>\n    )\n}\n\nexport default TeamChannelPreview\n"]},"metadata":{},"sourceType":"module"}