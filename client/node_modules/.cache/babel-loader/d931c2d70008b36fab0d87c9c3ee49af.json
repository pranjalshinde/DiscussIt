{"ast":null,"code":"import { useMemo } from 'react';\nexport var useCreateChatContext = function (value) {\n  var _a;\n\n  var channel = value.channel,\n      client = value.client,\n      closeMobileNav = value.closeMobileNav,\n      customClasses = value.customClasses,\n      mutes = value.mutes,\n      navOpen = value.navOpen,\n      openMobileNav = value.openMobileNav,\n      setActiveChannel = value.setActiveChannel,\n      theme = value.theme,\n      useImageFlagEmojisOnWindows = value.useImageFlagEmojisOnWindows;\n  var channelCid = channel === null || channel === void 0 ? void 0 : channel.cid;\n  var clientValues = \"\" + client.clientID + Object.keys(client.activeChannels).length + Object.keys(client.listeners).length + client.mutedChannels.length + \"\\n  \" + ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);\n  var mutedUsersLength = mutes.length;\n  var chatContext = useMemo(function () {\n    return {\n      channel: channel,\n      client: client,\n      closeMobileNav: closeMobileNav,\n      customClasses: customClasses,\n      mutes: mutes,\n      navOpen: navOpen,\n      openMobileNav: openMobileNav,\n      setActiveChannel: setActiveChannel,\n      theme: theme,\n      useImageFlagEmojisOnWindows: useImageFlagEmojisOnWindows\n    };\n  }, [channelCid, clientValues, mutedUsersLength, navOpen]);\n  return chatContext;\n};","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/node_modules/stream-chat-react/dist/components/Chat/hooks/useCreateChatContext.js"],"names":["useMemo","useCreateChatContext","value","_a","channel","client","closeMobileNav","customClasses","mutes","navOpen","openMobileNav","setActiveChannel","theme","useImageFlagEmojisOnWindows","channelCid","cid","clientValues","clientID","Object","keys","activeChannels","length","listeners","mutedChannels","user","id","mutedUsersLength","chatContext"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,KAAV,EAAiB;AAC/C,MAAIC,EAAJ;;AACA,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AAAA,MAA6BC,MAAM,GAAGH,KAAK,CAACG,MAA5C;AAAA,MAAoDC,cAAc,GAAGJ,KAAK,CAACI,cAA3E;AAAA,MAA2FC,aAAa,GAAGL,KAAK,CAACK,aAAjH;AAAA,MAAgIC,KAAK,GAAGN,KAAK,CAACM,KAA9I;AAAA,MAAqJC,OAAO,GAAGP,KAAK,CAACO,OAArK;AAAA,MAA8KC,aAAa,GAAGR,KAAK,CAACQ,aAApM;AAAA,MAAmNC,gBAAgB,GAAGT,KAAK,CAACS,gBAA5O;AAAA,MAA8PC,KAAK,GAAGV,KAAK,CAACU,KAA5Q;AAAA,MAAmRC,2BAA2B,GAAGX,KAAK,CAACW,2BAAvT;AACA,MAAIC,UAAU,GAAGV,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW,GAA3E;AACA,MAAIC,YAAY,GAAG,KAAKX,MAAM,CAACY,QAAZ,GAAuBC,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACe,cAAnB,EAAmCC,MAA1D,GAAmEH,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACiB,SAAnB,EAA8BD,MAAjG,GAA0GhB,MAAM,CAACkB,aAAP,CAAqBF,MAA/H,GAAwI,MAAxI,IAAkJ,CAAClB,EAAE,GAAGE,MAAM,CAACmB,IAAb,MAAuB,IAAvB,IAA+BrB,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACsB,EAA7M,CAAnB;AACA,MAAIC,gBAAgB,GAAGlB,KAAK,CAACa,MAA7B;AACA,MAAIM,WAAW,GAAG3B,OAAO,CAAC,YAAY;AAAE,WAAQ;AAC5CI,MAAAA,OAAO,EAAEA,OADmC;AAE5CC,MAAAA,MAAM,EAAEA,MAFoC;AAG5CC,MAAAA,cAAc,EAAEA,cAH4B;AAI5CC,MAAAA,aAAa,EAAEA,aAJ6B;AAK5CC,MAAAA,KAAK,EAAEA,KALqC;AAM5CC,MAAAA,OAAO,EAAEA,OANmC;AAO5CC,MAAAA,aAAa,EAAEA,aAP6B;AAQ5CC,MAAAA,gBAAgB,EAAEA,gBAR0B;AAS5CC,MAAAA,KAAK,EAAEA,KATqC;AAU5CC,MAAAA,2BAA2B,EAAEA;AAVe,KAAR;AAWnC,GAXoB,EAWlB,CAACC,UAAD,EAAaE,YAAb,EAA2BU,gBAA3B,EAA6CjB,OAA7C,CAXkB,CAAzB;AAYA,SAAOkB,WAAP;AACH,CAnBM","sourcesContent":["import { useMemo } from 'react';\nexport var useCreateChatContext = function (value) {\n    var _a;\n    var channel = value.channel, client = value.client, closeMobileNav = value.closeMobileNav, customClasses = value.customClasses, mutes = value.mutes, navOpen = value.navOpen, openMobileNav = value.openMobileNav, setActiveChannel = value.setActiveChannel, theme = value.theme, useImageFlagEmojisOnWindows = value.useImageFlagEmojisOnWindows;\n    var channelCid = channel === null || channel === void 0 ? void 0 : channel.cid;\n    var clientValues = \"\" + client.clientID + Object.keys(client.activeChannels).length + Object.keys(client.listeners).length + client.mutedChannels.length + \"\\n  \" + ((_a = client.user) === null || _a === void 0 ? void 0 : _a.id);\n    var mutedUsersLength = mutes.length;\n    var chatContext = useMemo(function () { return ({\n        channel: channel,\n        client: client,\n        closeMobileNav: closeMobileNav,\n        customClasses: customClasses,\n        mutes: mutes,\n        navOpen: navOpen,\n        openMobileNav: openMobileNav,\n        setActiveChannel: setActiveChannel,\n        theme: theme,\n        useImageFlagEmojisOnWindows: useImageFlagEmojisOnWindows,\n    }); }, [channelCid, clientValues, mutedUsersLength, navOpen]);\n    return chatContext;\n};\n"]},"metadata":{},"sourceType":"module"}