{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/App.jsx\";\nimport React, { useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelContainer, ChannelListContainer, Auth } from './components';\nimport './App.css';\nconst cookies = new Cookies();\nconst apiKey = 'nr5cxj6kt3gc';\nconst authToken = cookies.get('token');\nconst client = StreamChat.getInstance(apiKey);\n\nif (authToken) {\n  client.connectUser({\n    id: cookies.get('userId'),\n    name: cookies.get('userName'),\n    fullName: cookies.get('fullName'),\n    image: cookies.get('avatarURL'),\n    hashedPassword: cookies.get('hashedPassword'),\n    phoneNumber: cookies.get('phoneNumber')\n  }, authToken);\n}\n\nconst App = () => {\n  const [createType, setCreateType] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  if (!authToken) return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    client: client,\n    theme: \"team light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChannelListContainer, {\n    iscreating: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/App.jsx"],"names":["React","useState","StreamChat","Chat","Cookies","ChannelContainer","ChannelListContainer","Auth","cookies","apiKey","authToken","get","client","getInstance","connectUser","id","name","fullName","image","hashedPassword","phoneNumber","App","createType","setCreateType","isCreating","setIsCreating","isEditing","setIsEditing"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAGA,SAASC,gBAAT,EAA2BC,oBAA3B,EAAiDC,IAAjD,QAA6D,cAA7D;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AAEA,MAAMK,MAAM,GAAG,cAAf;AACA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAlB;AAEA,MAAMC,MAAM,GAAGV,UAAU,CAACW,WAAX,CAAuBJ,MAAvB,CAAf;;AAGA,IAAGC,SAAH,EAAc;AACVE,EAAAA,MAAM,CAACE,WAAP,CAAmB;AACfC,IAAAA,EAAE,EAAEP,OAAO,CAACG,GAAR,CAAY,QAAZ,CADW;AAEfK,IAAAA,IAAI,EAAER,OAAO,CAACG,GAAR,CAAY,UAAZ,CAFS;AAGfM,IAAAA,QAAQ,EAAET,OAAO,CAACG,GAAR,CAAY,UAAZ,CAHK;AAIfO,IAAAA,KAAK,EAAEV,OAAO,CAACG,GAAR,CAAY,WAAZ,CAJQ;AAKfQ,IAAAA,cAAc,EAAEX,OAAO,CAACG,GAAR,CAAY,gBAAZ,CALD;AAMfS,IAAAA,WAAW,EAAEZ,OAAO,CAACG,GAAR,CAAY,aAAZ;AANE,GAAnB,EAOGD,SAPH;AAQH;;AAED,MAAMW,GAAG,GAAG,MAAM;AAEd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAG,CAACS,SAAJ,EAAe,oBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACf,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEE,MAAd;AAAsB,IAAA,KAAK,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,oBAAD;AACI,IAAA,UAAU,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAUH,CAjBD;;AAmBA,eAAeS,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\n\nimport { ChannelContainer, ChannelListContainer, Auth } from './components';\n\nimport './App.css';\n\nconst cookies = new Cookies();\n\nconst apiKey = 'nr5cxj6kt3gc';\nconst authToken = cookies.get('token');\n\nconst client = StreamChat.getInstance(apiKey);\n\n\nif(authToken) {\n    client.connectUser({\n        id: cookies.get('userId'),\n        name: cookies.get('userName'),\n        fullName: cookies.get('fullName'),\n        image: cookies.get('avatarURL'),\n        hashedPassword: cookies.get('hashedPassword'),\n        phoneNumber: cookies.get('phoneNumber'),\n    }, authToken)\n}\n\nconst App = () => {\n\n    const [createType, setCreateType] = useState('');\n    const [isCreating, setIsCreating] = useState(false);\n    const [isEditing, setIsEditing] = useState(false);\n\n    if(!authToken) return <Auth/> \n    return (\n        <div className=\"app__wrapper\">\n            <Chat client={client} theme=\"team light\">\n                <ChannelListContainer\n                    iscreating\n                />\n                <ChannelContainer/>\n            </Chat>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}