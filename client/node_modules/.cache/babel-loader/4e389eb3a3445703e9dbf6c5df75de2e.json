{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/ChannelListContainer.jsx\";\n// import React, {useState} from 'react'\n// import { ChannelContainer, ChannelList, useChatContext } from 'stream-chat-react';\n// import Cookies from 'universal-cookie';\n// import { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\n// import ChatAppIcon from '../assets/ChatApp.png';\n// import LogoutIcon from '../assets/logout.png';\n// import { initialState } from 'stream-chat-react/dist/components/Channel/channelState';\n// const cookies = new Cookies();\n// const Sidebar = ({logout}) => (\n//     <div className=\"channel-list__sidebar\">\n//         <div className=\"channel-list__sidebar__icon1\">\n//             <div className=\"icon1__inner\">\n//                 <img src= {ChatAppIcon} alt=\"ChatApp\" width= \"30\"/>\n//             </div>\n//         </div>\n//         <div className=\"channel-list__sidebar__icon2\">\n//             <div className=\"icon1__inner\" onClick={logout}>\n//                 <img src= {LogoutIcon} alt=\"Logout\" width= \"30\"/>\n//             </div>\n//         </div>\n//     </div>\n// );\n// const CompanyHeader = () => (\n//     <div className=\"channel-list__header\">\n//         <p className=\"channel-list__header__text\">DiscussIt</p>\n//     </div>\n// );\n// const customChannelTeamFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'team');\n// }\n// const customChannelMessagingFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'messaging');\n// }\n// const ChannelListContent = ({isCreating, setIsCreating ,setCreateType ,setIsEditing}) => {\n//     const {client} = useChatContext();\n//     const logout = () => {\n//         cookies.remove('token');\n//         cookies.remove('userId');\n//         cookies.remove('userName');\n//         cookies.remove('fullName');\n//         cookies.remove('avatarURL');\n//         cookies.remove('hashedPassword');\n//         cookies.remove('phoneNumber');\n//         window.location.reload();\n//     }\n//     const filters = {members: { $in: [client.userID]}};\n//     return (\n//         <>\n//             <Sidebar logout={logout}/>\n//             <div className=\"channel-list__list__wrapper\">\n//                 <CompanyHeader/>\n//                 <ChannelSearch/>\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelTeamFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n//                             type=\"team\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing} \n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"team\" \n//                         />\n//                     )}\n//                 />\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelMessagingFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n//                             type=\"messaging\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing}\n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"messaging\"   \n//                         />\n//                     )}\n//                 />\n//             </div>\n//         </>\n//     )\n// }\n// const ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing}) => {\n//     const [toggleContainer, setToggleContainer] = useState(false);\n//     return (\n//         <>\n//             <div className=\"channel-list__container\">\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                 />\n//             </div>\n//             <div className=\"channel-list__container-responsive\"\n//                 style={{left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}>\n//                 <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !(prevToggleContainer))}></div>\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                     setToggleContainer={setToggleContainer}\n//                 />\n//             </div>\n//         </>\n//     )\n// }\n// export default ChannelListContainer\nimport React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport ChatAppIcon from '../assets/ChatApp.png';\nimport LogoutIcon from '../assets/logout.png';\nconst cookies = new Cookies();\n\nconst SideBar = _ref => {\n  let {\n    logout\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar__icon1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon1__inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ChatAppIcon,\n    alt: \"Hospital\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__sidebar__icon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon1__inner\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LogoutIcon,\n    alt: \"Logout\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }))));\n};\n\nconst CompanyHeader = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"channel-list__header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"channel-list__header__text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }\n}, \"DiscussIt\"));\n\nconst customChannelTeamFilter = channels => {\n  return channels.filter(channel => channel.type === 'team');\n};\n\nconst customChannelMessagingFilter = channels => {\n  return channels.filter(channel => channel.type === 'messaging');\n};\n\nconst ChannelListContent = _ref2 => {\n  let {\n    isCreating,\n    setIsCreating,\n    setCreateType,\n    setIsEditing,\n    setToggleContainer\n  } = _ref2;\n  const {\n    client\n  } = useChatContext();\n\n  const logout = () => {\n    cookies.remove(\"token\");\n    cookies.remove('userId');\n    cookies.remove('username');\n    cookies.remove('fullName');\n    cookies.remove('avatarURL');\n    cookies.remove('hashedPassword');\n    cookies.remove('phoneNumber');\n    window.location.reload();\n  };\n\n  const filters = {\n    members: {\n      $in: [client.userID]\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SideBar, {\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__list__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CompanyHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelSearch, {\n    setToggleContainer: setToggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelList, {\n    filters: filters,\n    channelRenderFilterFn: customChannelTeamFilter,\n    List: listProps => /*#__PURE__*/React.createElement(TeamChannelList, Object.assign({}, listProps, {\n      type: \"team\",\n      isCreating: isCreating,\n      setIsCreating: setIsCreating,\n      setCreateType: setCreateType,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    })),\n    Preview: previewProps => /*#__PURE__*/React.createElement(TeamChannelPreview, Object.assign({}, previewProps, {\n      setIsCreating: setIsCreating,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      type: \"team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelList, {\n    filters: filters,\n    channelRenderFilterFn: customChannelMessagingFilter,\n    List: listProps => /*#__PURE__*/React.createElement(TeamChannelList, Object.assign({}, listProps, {\n      type: \"messaging\",\n      isCreating: isCreating,\n      setIsCreating: setIsCreating,\n      setCreateType: setCreateType,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    })),\n    Preview: previewProps => /*#__PURE__*/React.createElement(TeamChannelPreview, Object.assign({}, previewProps, {\n      setIsCreating: setIsCreating,\n      setIsEditing: setIsEditing,\n      setToggleContainer: setToggleContainer,\n      type: \"messaging\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst ChannelListContainer = _ref3 => {\n  let {\n    setCreateType,\n    setIsCreating,\n    setIsEditing\n  } = _ref3;\n  const [toggleContainer, setToggleContainer] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChannelListContent, {\n    setIsCreating: setIsCreating,\n    setCreateType: setCreateType,\n    setIsEditing: setIsEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__container-responsive\",\n    style: {\n      left: toggleContainer ? \"0%\" : \"-89%\",\n      backgroundColor: \"#005fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-list__container-toggle\",\n    onClick: () => setToggleContainer(prevToggleContainer => !prevToggleContainer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ChannelListContent, {\n    setIsCreating: setIsCreating,\n    setCreateType: setCreateType,\n    setIsEditing: setIsEditing,\n    setToggleContainer: setToggleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ChannelListContainer;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/ChannelListContainer.jsx"],"names":["React","useState","ChannelList","useChatContext","Cookies","ChannelSearch","TeamChannelList","TeamChannelPreview","ChatAppIcon","LogoutIcon","cookies","SideBar","logout","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","isCreating","setIsCreating","setCreateType","setIsEditing","setToggleContainer","client","remove","window","location","reload","filters","members","$in","userID","listProps","previewProps","ChannelListContainer","toggleContainer","left","backgroundColor","prevToggleContainer"],"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","sourcesContent":["// import React, {useState} from 'react'\n// import { ChannelContainer, ChannelList, useChatContext } from 'stream-chat-react';\n// import Cookies from 'universal-cookie';\n\n// import { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\n// import ChatAppIcon from '../assets/ChatApp.png';\n// import LogoutIcon from '../assets/logout.png';\n// import { initialState } from 'stream-chat-react/dist/components/Channel/channelState';\n\n// const cookies = new Cookies();\n\n// const Sidebar = ({logout}) => (\n//     <div className=\"channel-list__sidebar\">\n//         <div className=\"channel-list__sidebar__icon1\">\n//             <div className=\"icon1__inner\">\n//                 <img src= {ChatAppIcon} alt=\"ChatApp\" width= \"30\"/>\n//             </div>\n//         </div>\n//         <div className=\"channel-list__sidebar__icon2\">\n//             <div className=\"icon1__inner\" onClick={logout}>\n//                 <img src= {LogoutIcon} alt=\"Logout\" width= \"30\"/>\n//             </div>\n//         </div>\n//     </div>\n\n    \n// );\n\n// const CompanyHeader = () => (\n//     <div className=\"channel-list__header\">\n//         <p className=\"channel-list__header__text\">DiscussIt</p>\n//     </div>\n// );\n    \n// const customChannelTeamFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'team');\n// }\n// const customChannelMessagingFilter = (channels) => {\n//     return channels.filter((channel) => channel.type == 'messaging');\n// }\n\n// const ChannelListContent = ({isCreating, setIsCreating ,setCreateType ,setIsEditing}) => {\n//     const {client} = useChatContext();\n\n//     const logout = () => {\n//         cookies.remove('token');\n//         cookies.remove('userId');\n//         cookies.remove('userName');\n//         cookies.remove('fullName');\n//         cookies.remove('avatarURL');\n//         cookies.remove('hashedPassword');\n//         cookies.remove('phoneNumber');\n\n//         window.location.reload();\n//     }\n    \n//     const filters = {members: { $in: [client.userID]}};\n\n//     return (\n//         <>\n//             <Sidebar logout={logout}/>\n//             <div className=\"channel-list__list__wrapper\">\n//                 <CompanyHeader/>\n//                 <ChannelSearch/>\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelTeamFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n                            \n//                             type=\"team\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing} \n                            \n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"team\" \n                            \n//                         />\n//                     )}\n//                 />\n//                 <ChannelList \n//                     filters={{filters}}\n//                     channelRenderFilterFn={customChannelMessagingFilter}\n//                     List= {(listProps) => (\n//                         <TeamChannelList\n//                             {...listProps}\n//                             type=\"messaging\"\n//                             isCreating={isCreating}\n//                             setIsCreating={setIsCreating}\n//                             setCreateType={setCreateType}\n//                             setIsEditing={setIsEditing}\n//                         />\n//                     )}\n//                     Preview={(previewProps) => (\n//                         <TeamChannelPreview\n//                             {...previewProps} \n//                             type=\"messaging\"   \n//                         />\n//                     )}\n//                 />\n//             </div>\n//         </>\n//     )\n// }\n\n// const ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing}) => {\n//     const [toggleContainer, setToggleContainer] = useState(false);\n\n//     return (\n//         <>\n//             <div className=\"channel-list__container\">\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                 />\n//             </div>\n\n//             <div className=\"channel-list__container-responsive\"\n//                 style={{left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}>\n//                 <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !(prevToggleContainer))}></div>\n//                 <ChannelListContent\n//                     setIsCreating={setIsCreating}\n//                     setCreateType={setCreateType}\n//                     setIsEditing={setIsEditing}\n//                     setToggleContainer={setToggleContainer}\n//                 />\n//             </div>\n//         </>\n//     )\n\n// }\n\n// export default ChannelListContainer\n\nimport React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport ChatAppIcon from '../assets/ChatApp.png'\nimport LogoutIcon from '../assets/logout.png'\n\nconst cookies = new Cookies();\n\nconst SideBar = ({ logout }) => (\n    <div className=\"channel-list__sidebar\">\n        <div className=\"channel-list__sidebar__icon1\">\n            <div className=\"icon1__inner\">\n                <img src={ChatAppIcon} alt=\"Hospital\" width=\"30\" />\n            </div>\n        </div>\n        <div className=\"channel-list__sidebar__icon2\">\n            <div className=\"icon1__inner\" onClick={logout}>\n                <img src={LogoutIcon} alt=\"Logout\" width=\"30\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CompanyHeader = () => (\n    <div className=\"channel-list__header\">\n        <p className=\"channel-list__header__text\">DiscussIt</p>\n    </div>\n)\n\nconst customChannelTeamFilter = (channels) => {\n    return channels.filter((channel) => channel.type === 'team');\n}\n\nconst customChannelMessagingFilter = (channels) => {\n    return channels.filter((channel) => channel.type === 'messaging');\n}\n\nconst ChannelListContent = ({ isCreating, setIsCreating, setCreateType, setIsEditing, setToggleContainer }) => {\n    const { client } = useChatContext();\n\n    const logout = () => {\n        cookies.remove(\"token\");\n        cookies.remove('userId');\n        cookies.remove('username');\n        cookies.remove('fullName');\n        cookies.remove('avatarURL');\n        cookies.remove('hashedPassword');\n        cookies.remove('phoneNumber');\n\n        window.location.reload();\n    }\n\n    const filters = { members: { $in: [client.userID] } };\n\n    return (\n        <>\n            <SideBar logout={logout} />\n            <div className=\"channel-list__list__wrapper\">\n                <CompanyHeader />\n                <ChannelSearch setToggleContainer={setToggleContainer} />\n                <ChannelList \n                    filters={filters}\n                    channelRenderFilterFn={customChannelTeamFilter}\n                    List={(listProps) => (\n                        <TeamChannelList \n                            {...listProps}\n                            type=\"team\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType} \n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview \n                            {...previewProps}\n                            setIsCreating={setIsCreating}\n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                            type=\"team\"\n                        />\n                    )}\n                />\n                <ChannelList \n                    filters={filters}\n                    channelRenderFilterFn={customChannelMessagingFilter}\n                    List={(listProps) => (\n                        <TeamChannelList \n                            {...listProps}\n                            type=\"messaging\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType} \n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview \n                            {...previewProps}\n                            setIsCreating={setIsCreating}\n                            setIsEditing={setIsEditing}\n                            setToggleContainer={setToggleContainer}\n                            type=\"messaging\"\n                        />\n                    )}\n                />\n            </div>\n        </>\n    );\n}\n\nconst ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\n    const [toggleContainer, setToggleContainer] = useState(false);\n\n    return (\n        <>\n            <div className=\"channel-list__container\">\n              <ChannelListContent \n                setIsCreating={setIsCreating} \n                setCreateType={setCreateType} \n                setIsEditing={setIsEditing} \n              />\n            </div>\n\n            <div className=\"channel-list__container-responsive\"\n                style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}\n            >\n                <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\n                </div>\n                <ChannelListContent \n                setIsCreating={setIsCreating} \n                setCreateType={setCreateType} \n                setIsEditing={setIsEditing}\n                setToggleContainer={setToggleContainer}\n              />\n            </div>\n        </>\n    )\n\n}\n\nexport default ChannelListContainer;"]},"metadata":{},"sourceType":"module"}