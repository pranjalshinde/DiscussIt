{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/TeamChannelPreview.jsx\";\nimport React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nconst TeamChannelPreview = _ref => {\n  let {\n    setIsCreating,\n    setIsEditing,\n    setToggleContainer,\n    channel,\n    type\n  } = _ref;\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n\n  const ChannelPreview = () => {\n    var _channel$data, _channel$data2;\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"channel-preview__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, \"# \", (channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name) || (channel === null || channel === void 0 ? void 0 : (_channel$data2 = channel.data) === null || _channel$data2 === void 0 ? void 0 : _channel$data2.id));\n  };\n\n  const DirectPreview = () => {\n    var _members$, _members$$user, _members$2, _members$2$user, _members$3, _members$3$user;\n\n    const members = Object.values(channel.state.members).filter(_ref2 => {\n      let {\n        user\n      } = _ref2;\n      return user.id != client.userID;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channel-preview__item single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      image: (_members$ = members[0]) === null || _members$ === void 0 ? void 0 : (_members$$user = _members$.user) === null || _members$$user === void 0 ? void 0 : _members$$user.image,\n      name: (_members$2 = members[0]) === null || _members$2 === void 0 ? void 0 : (_members$2$user = _members$2.user) === null || _members$2$user === void 0 ? void 0 : _members$2$user.fullName,\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, (_members$3 = members[0]) === null || _members$3 === void 0 ? void 0 : (_members$3$user = _members$3.user) === null || _members$3$user === void 0 ? void 0 : _members$3$user.fullName));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? 'channel-preview__wrapper__selected' : 'channel-preview__wrapper',\n    onClick: () => {\n      setIsCreating(false);\n      setIsEditing(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, type === 'team' ? /*#__PURE__*/React.createElement(ChannelPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(DirectPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 52\n    }\n  }));\n};\n\nexport default TeamChannelPreview;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/TeamChannelPreview.jsx"],"names":["React","Avatar","useChatContext","TeamChannelPreview","setIsCreating","setIsEditing","setToggleContainer","channel","type","activeChannel","client","ChannelPreview","data","name","id","DirectPreview","members","Object","values","state","filter","user","userID","image","fullName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,mBAAvC;;AAEA,MAAMC,kBAAkB,GAAG,QAAsE;AAAA,MAArE;AAACC,IAAAA,aAAD;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA,kBAA9B;AAAkDC,IAAAA,OAAlD;AAA2DC,IAAAA;AAA3D,GAAqE;AAC7F,QAAM;AAACD,IAAAA,OAAO,EAAEE,aAAV;AAAyBC,IAAAA;AAAzB,MAAoCR,cAAc,EAAxD;;AAEA,QAAMS,cAAc,GAAG;AAAA;;AAAA,wBACnB;AAAG,MAAA,SAAS,EAAE,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACO,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEK,IAAT,gEAAeC,IAAf,MAAuBN,OAAvB,aAAuBA,OAAvB,yCAAuBA,OAAO,CAAEK,IAAhC,mDAAuB,eAAeE,EAAtC,CADP,CADmB;AAAA,GAAvB;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,UAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAACY,KAAR,CAAcH,OAA5B,EAAqCI,MAArC,CAA4C;AAAA,UAAC;AAACC,QAAAA;AAAD,OAAD;AAAA,aAAYA,IAAI,CAACP,EAAL,IAAWJ,MAAM,CAACY,MAA9B;AAAA,KAA5C,CAAhB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,eAAEN,OAAO,CAAC,CAAD,CAAT,gEAAE,UAAYK,IAAd,mDAAE,eAAkBE,KAD7B;AAEI,MAAA,IAAI,gBAAEP,OAAO,CAAC,CAAD,CAAT,kEAAE,WAAYK,IAAd,oDAAE,gBAAkBG,QAF5B;AAGI,MAAA,IAAI,EAAE,EAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAIR,OAAO,CAAC,CAAD,CAAX,kEAAI,WAAYK,IAAhB,oDAAI,gBAAkBG,QAAtB,CANJ,CADJ;AAUH,GAbD;;AAcA,sBACI;AAAK,IAAA,SAAS,EACV,CAAAjB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEO,EAAT,OAAgBL,aAAhB,aAAgBA,aAAhB,uBAAgBA,aAAa,CAAEK,EAA/B,IACE,oCADF,GAEE,0BAHN;AAKA,IAAA,OAAO,EAAE,MAAM;AACXV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKG,IAAI,KAAK,MAAT,gBAAkB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAAsC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAV3C,CADJ;AAcH,CAtCD;;AAwCA,eAAeL,kBAAf","sourcesContent":["import React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\n\nconst TeamChannelPreview = ({setIsCreating, setIsEditing ,setToggleContainer ,channel, type}) => {\n    const {channel: activeChannel, client } = useChatContext();\n\n    const ChannelPreview = () => (\n        <p className =\"channel-preview__item\">\n            # {channel?.data?.name || channel?.data?.id}\n        </p>\n    );\n    \n\n    const DirectPreview = () => {\n        const members = Object.values(channel.state.members).filter(({user}) => user.id != client.userID);\n        \n        return (\n            <div className=\"channel-preview__item single\">\n                <Avatar\n                    image={members[0]?.user?.image}\n                    name={members[0]?.user?.fullName}\n                    size={24}\n                />\n                <p>{members[0]?.user?.fullName}</p>\n            </div>\n        )\n    }\n    return (\n        <div className={\n            channel?.id === activeChannel?.id\n            ? 'channel-preview__wrapper__selected'\n            : 'channel-preview__wrapper'\n        }\n        onClick={() => {\n            setIsCreating(false);\n            setIsEditing(false);\n        }}\n        >\n            {type === 'team' ? <ChannelPreview/> : <DirectPreview/> }\n        </div>\n    )\n}\n\nexport default TeamChannelPreview\n"]},"metadata":{},"sourceType":"module"}