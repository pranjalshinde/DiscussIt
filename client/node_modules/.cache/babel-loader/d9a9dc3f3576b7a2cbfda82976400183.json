{"ast":null,"code":"import { useMemo } from 'react';\nimport { isDate, isDayOrMoment } from '../../../context/TranslationContext';\nexport var useCreateChannelStateContext = function (value) {\n  var _a;\n\n  var acceptedFiles = value.acceptedFiles,\n      channel = value.channel,\n      _b = value.channelCapabilitiesArray,\n      channelCapabilitiesArray = _b === void 0 ? [] : _b,\n      channelConfig = value.channelConfig,\n      error = value.error,\n      hasMore = value.hasMore,\n      loading = value.loading,\n      loadingMore = value.loadingMore,\n      maxNumberOfFiles = value.maxNumberOfFiles,\n      members = value.members,\n      _c = value.messages,\n      messages = _c === void 0 ? [] : _c,\n      multipleUploads = value.multipleUploads,\n      mutes = value.mutes,\n      notifications = value.notifications,\n      pinnedMessages = value.pinnedMessages,\n      quotedMessage = value.quotedMessage,\n      _d = value.read,\n      read = _d === void 0 ? {} : _d,\n      skipMessageDataMemoization = value.skipMessageDataMemoization,\n      thread = value.thread,\n      threadHasMore = value.threadHasMore,\n      threadLoadingMore = value.threadLoadingMore,\n      _e = value.threadMessages,\n      threadMessages = _e === void 0 ? [] : _e,\n      watcherCount = value.watcherCount,\n      watcher_count = value.watcher_count,\n      watchers = value.watchers;\n  var channelId = channel.cid;\n  var lastRead = channel.initialized && ((_a = channel.lastRead()) === null || _a === void 0 ? void 0 : _a.getTime());\n  var membersLength = Object.keys(members || []).length;\n  var notificationsLength = notifications.length;\n  var readUsers = Object.values(read);\n  var readUsersLength = readUsers.length;\n  var readUsersLastReads = readUsers.map(function (_a) {\n    var last_read = _a.last_read;\n    return last_read.toISOString();\n  }).join();\n  var threadMessagesLength = threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length;\n  var channelCapabilities = {};\n  channelCapabilitiesArray.forEach(function (capability) {\n    channelCapabilities[capability] = true;\n  });\n  var memoizedMessageData = skipMessageDataMemoization ? messages : messages.map(function (_a) {\n    var deleted_at = _a.deleted_at,\n        latest_reactions = _a.latest_reactions,\n        pinned = _a.pinned,\n        reply_count = _a.reply_count,\n        status = _a.status,\n        updated_at = _a.updated_at;\n    return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n      var type = _a.type;\n      return type;\n    }).join() : '') + pinned + reply_count + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at)) ? updated_at.toISOString() : updated_at || '');\n  }).join();\n  var memoizedThreadMessageData = threadMessages.map(function (_a) {\n    var deleted_at = _a.deleted_at,\n        latest_reactions = _a.latest_reactions,\n        pinned = _a.pinned,\n        status = _a.status,\n        updated_at = _a.updated_at;\n    return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n      var type = _a.type;\n      return type;\n    }).join() : '') + pinned + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at)) ? updated_at.toISOString() : updated_at || '');\n  }).join();\n  var channelStateContext = useMemo(function () {\n    return {\n      acceptedFiles: acceptedFiles,\n      channel: channel,\n      channelCapabilities: channelCapabilities,\n      channelConfig: channelConfig,\n      error: error,\n      hasMore: hasMore,\n      loading: loading,\n      loadingMore: loadingMore,\n      maxNumberOfFiles: maxNumberOfFiles,\n      members: members,\n      messages: messages,\n      multipleUploads: multipleUploads,\n      mutes: mutes,\n      notifications: notifications,\n      pinnedMessages: pinnedMessages,\n      quotedMessage: quotedMessage,\n      read: read,\n      thread: thread,\n      threadHasMore: threadHasMore,\n      threadLoadingMore: threadLoadingMore,\n      threadMessages: threadMessages,\n      watcher_count: watcher_count,\n      watcherCount: watcherCount,\n      watchers: watchers\n    };\n  }, [channelId, error, hasMore, lastRead, loading, loadingMore, membersLength, memoizedMessageData, memoizedThreadMessageData, notificationsLength, quotedMessage, readUsersLength, readUsersLastReads, skipMessageDataMemoization, thread, threadHasMore, threadLoadingMore, threadMessagesLength, watcherCount]);\n  return channelStateContext;\n};","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/node_modules/stream-chat-react/dist/components/Channel/hooks/useCreateChannelStateContext.js"],"names":["useMemo","isDate","isDayOrMoment","useCreateChannelStateContext","value","_a","acceptedFiles","channel","_b","channelCapabilitiesArray","channelConfig","error","hasMore","loading","loadingMore","maxNumberOfFiles","members","_c","messages","multipleUploads","mutes","notifications","pinnedMessages","quotedMessage","_d","read","skipMessageDataMemoization","thread","threadHasMore","threadLoadingMore","_e","threadMessages","watcherCount","watcher_count","watchers","channelId","cid","lastRead","initialized","getTime","membersLength","Object","keys","length","notificationsLength","readUsers","values","readUsersLength","readUsersLastReads","map","last_read","toISOString","join","threadMessagesLength","channelCapabilities","forEach","capability","memoizedMessageData","deleted_at","latest_reactions","pinned","reply_count","status","updated_at","type","memoizedThreadMessageData","channelStateContext"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,qCAAtC;AACA,OAAO,IAAIC,4BAA4B,GAAG,UAAUC,KAAV,EAAiB;AACvD,MAAIC,EAAJ;;AACA,MAAIC,aAAa,GAAGF,KAAK,CAACE,aAA1B;AAAA,MAAyCC,OAAO,GAAGH,KAAK,CAACG,OAAzD;AAAA,MAAkEC,EAAE,GAAGJ,KAAK,CAACK,wBAA7E;AAAA,MAAuGA,wBAAwB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAvJ;AAAA,MAA2JE,aAAa,GAAGN,KAAK,CAACM,aAAjL;AAAA,MAAgMC,KAAK,GAAGP,KAAK,CAACO,KAA9M;AAAA,MAAqNC,OAAO,GAAGR,KAAK,CAACQ,OAArO;AAAA,MAA8OC,OAAO,GAAGT,KAAK,CAACS,OAA9P;AAAA,MAAuQC,WAAW,GAAGV,KAAK,CAACU,WAA3R;AAAA,MAAwSC,gBAAgB,GAAGX,KAAK,CAACW,gBAAjU;AAAA,MAAmVC,OAAO,GAAGZ,KAAK,CAACY,OAAnW;AAAA,MAA4WC,EAAE,GAAGb,KAAK,CAACc,QAAvX;AAAA,MAAiYA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAja;AAAA,MAAqaE,eAAe,GAAGf,KAAK,CAACe,eAA7b;AAAA,MAA8cC,KAAK,GAAGhB,KAAK,CAACgB,KAA5d;AAAA,MAAmeC,aAAa,GAAGjB,KAAK,CAACiB,aAAzf;AAAA,MAAwgBC,cAAc,GAAGlB,KAAK,CAACkB,cAA/hB;AAAA,MAA+iBC,aAAa,GAAGnB,KAAK,CAACmB,aAArkB;AAAA,MAAolBC,EAAE,GAAGpB,KAAK,CAACqB,IAA/lB;AAAA,MAAqmBA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAjoB;AAAA,MAAqoBE,0BAA0B,GAAGtB,KAAK,CAACsB,0BAAxqB;AAAA,MAAosBC,MAAM,GAAGvB,KAAK,CAACuB,MAAntB;AAAA,MAA2tBC,aAAa,GAAGxB,KAAK,CAACwB,aAAjvB;AAAA,MAAgwBC,iBAAiB,GAAGzB,KAAK,CAACyB,iBAA1xB;AAAA,MAA6yBC,EAAE,GAAG1B,KAAK,CAAC2B,cAAxzB;AAAA,MAAw0BA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA92B;AAAA,MAAk3BE,YAAY,GAAG5B,KAAK,CAAC4B,YAAv4B;AAAA,MAAq5BC,aAAa,GAAG7B,KAAK,CAAC6B,aAA36B;AAAA,MAA07BC,QAAQ,GAAG9B,KAAK,CAAC8B,QAA38B;AACA,MAAIC,SAAS,GAAG5B,OAAO,CAAC6B,GAAxB;AACA,MAAIC,QAAQ,GAAG9B,OAAO,CAAC+B,WAAR,KAAwB,CAACjC,EAAE,GAAGE,OAAO,CAAC8B,QAAR,EAAN,MAA8B,IAA9B,IAAsChC,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACkC,OAAH,EAAvF,CAAf;AACA,MAAIC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAY1B,OAAO,IAAI,EAAvB,EAA2B2B,MAA/C;AACA,MAAIC,mBAAmB,GAAGvB,aAAa,CAACsB,MAAxC;AACA,MAAIE,SAAS,GAAGJ,MAAM,CAACK,MAAP,CAAcrB,IAAd,CAAhB;AACA,MAAIsB,eAAe,GAAGF,SAAS,CAACF,MAAhC;AACA,MAAIK,kBAAkB,GAAGH,SAAS,CAACI,GAAV,CAAc,UAAU5C,EAAV,EAAc;AACjD,QAAI6C,SAAS,GAAG7C,EAAE,CAAC6C,SAAnB;AACA,WAAOA,SAAS,CAACC,WAAV,EAAP;AACH,GAHwB,EAGtBC,IAHsB,EAAzB;AAIA,MAAIC,oBAAoB,GAAGtB,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACY,MAA1G;AACA,MAAIW,mBAAmB,GAAG,EAA1B;AACA7C,EAAAA,wBAAwB,CAAC8C,OAAzB,CAAiC,UAAUC,UAAV,EAAsB;AACnDF,IAAAA,mBAAmB,CAACE,UAAD,CAAnB,GAAkC,IAAlC;AACH,GAFD;AAGA,MAAIC,mBAAmB,GAAG/B,0BAA0B,GAC9CR,QAD8C,GAE9CA,QAAQ,CACL+B,GADH,CACO,UAAU5C,EAAV,EAAc;AACnB,QAAIqD,UAAU,GAAGrD,EAAE,CAACqD,UAApB;AAAA,QAAgCC,gBAAgB,GAAGtD,EAAE,CAACsD,gBAAtD;AAAA,QAAwEC,MAAM,GAAGvD,EAAE,CAACuD,MAApF;AAAA,QAA4FC,WAAW,GAAGxD,EAAE,CAACwD,WAA7G;AAAA,QAA0HC,MAAM,GAAGzD,EAAE,CAACyD,MAAtI;AAAA,QAA8IC,UAAU,GAAG1D,EAAE,CAAC0D,UAA9J;AACA,WAAO,KAAKL,UAAL,IAAmBC,gBAAgB,GAAGA,gBAAgB,CAACV,GAAjB,CAAqB,UAAU5C,EAAV,EAAc;AAC5E,UAAI2D,IAAI,GAAG3D,EAAE,CAAC2D,IAAd;AACA,aAAOA,IAAP;AACH,KAH4C,EAG1CZ,IAH0C,EAAH,GAG9B,EAHL,IAGWQ,MAHX,GAGoBC,WAHpB,GAGkCC,MAHlC,IAG4CC,UAAU,KAAK7D,aAAa,CAAC6D,UAAD,CAAb,IAA6B9D,MAAM,CAAC8D,UAAD,CAAxC,CAAV,GAC7CA,UAAU,CAACZ,WAAX,EAD6C,GAE7CY,UAAU,IAAI,EALb,CAAP;AAMH,GATC,EAUGX,IAVH,EAFN;AAaA,MAAIa,yBAAyB,GAAGlC,cAAc,CACzCkB,GAD2B,CACvB,UAAU5C,EAAV,EAAc;AACnB,QAAIqD,UAAU,GAAGrD,EAAE,CAACqD,UAApB;AAAA,QAAgCC,gBAAgB,GAAGtD,EAAE,CAACsD,gBAAtD;AAAA,QAAwEC,MAAM,GAAGvD,EAAE,CAACuD,MAApF;AAAA,QAA4FE,MAAM,GAAGzD,EAAE,CAACyD,MAAxG;AAAA,QAAgHC,UAAU,GAAG1D,EAAE,CAAC0D,UAAhI;AACA,WAAO,KAAKL,UAAL,IAAmBC,gBAAgB,GAAGA,gBAAgB,CAACV,GAAjB,CAAqB,UAAU5C,EAAV,EAAc;AAC5E,UAAI2D,IAAI,GAAG3D,EAAE,CAAC2D,IAAd;AACA,aAAOA,IAAP;AACH,KAH4C,EAG1CZ,IAH0C,EAAH,GAG9B,EAHL,IAGWQ,MAHX,GAGoBE,MAHpB,IAG8BC,UAAU,KAAK7D,aAAa,CAAC6D,UAAD,CAAb,IAA6B9D,MAAM,CAAC8D,UAAD,CAAxC,CAAV,GAC/BA,UAAU,CAACZ,WAAX,EAD+B,GAE/BY,UAAU,IAAI,EALb,CAAP;AAMH,GAT+B,EAU3BX,IAV2B,EAAhC;AAWA,MAAIc,mBAAmB,GAAGlE,OAAO,CAAC,YAAY;AAAE,WAAQ;AACpDM,MAAAA,aAAa,EAAEA,aADqC;AAEpDC,MAAAA,OAAO,EAAEA,OAF2C;AAGpD+C,MAAAA,mBAAmB,EAAEA,mBAH+B;AAIpD5C,MAAAA,aAAa,EAAEA,aAJqC;AAKpDC,MAAAA,KAAK,EAAEA,KAL6C;AAMpDC,MAAAA,OAAO,EAAEA,OAN2C;AAOpDC,MAAAA,OAAO,EAAEA,OAP2C;AAQpDC,MAAAA,WAAW,EAAEA,WARuC;AASpDC,MAAAA,gBAAgB,EAAEA,gBATkC;AAUpDC,MAAAA,OAAO,EAAEA,OAV2C;AAWpDE,MAAAA,QAAQ,EAAEA,QAX0C;AAYpDC,MAAAA,eAAe,EAAEA,eAZmC;AAapDC,MAAAA,KAAK,EAAEA,KAb6C;AAcpDC,MAAAA,aAAa,EAAEA,aAdqC;AAepDC,MAAAA,cAAc,EAAEA,cAfoC;AAgBpDC,MAAAA,aAAa,EAAEA,aAhBqC;AAiBpDE,MAAAA,IAAI,EAAEA,IAjB8C;AAkBpDE,MAAAA,MAAM,EAAEA,MAlB4C;AAmBpDC,MAAAA,aAAa,EAAEA,aAnBqC;AAoBpDC,MAAAA,iBAAiB,EAAEA,iBApBiC;AAqBpDE,MAAAA,cAAc,EAAEA,cArBoC;AAsBpDE,MAAAA,aAAa,EAAEA,aAtBqC;AAuBpDD,MAAAA,YAAY,EAAEA,YAvBsC;AAwBpDE,MAAAA,QAAQ,EAAEA;AAxB0C,KAAR;AAyB3C,GAzB4B,EAyB1B,CACHC,SADG,EAEHxB,KAFG,EAGHC,OAHG,EAIHyB,QAJG,EAKHxB,OALG,EAMHC,WANG,EAOH0B,aAPG,EAQHiB,mBARG,EASHQ,yBATG,EAUHrB,mBAVG,EAWHrB,aAXG,EAYHwB,eAZG,EAaHC,kBAbG,EAcHtB,0BAdG,EAeHC,MAfG,EAgBHC,aAhBG,EAiBHC,iBAjBG,EAkBHwB,oBAlBG,EAmBHrB,YAnBG,CAzB0B,CAAjC;AA8CA,SAAOkC,mBAAP;AACH,CAzFM","sourcesContent":["import { useMemo } from 'react';\nimport { isDate, isDayOrMoment } from '../../../context/TranslationContext';\nexport var useCreateChannelStateContext = function (value) {\n    var _a;\n    var acceptedFiles = value.acceptedFiles, channel = value.channel, _b = value.channelCapabilitiesArray, channelCapabilitiesArray = _b === void 0 ? [] : _b, channelConfig = value.channelConfig, error = value.error, hasMore = value.hasMore, loading = value.loading, loadingMore = value.loadingMore, maxNumberOfFiles = value.maxNumberOfFiles, members = value.members, _c = value.messages, messages = _c === void 0 ? [] : _c, multipleUploads = value.multipleUploads, mutes = value.mutes, notifications = value.notifications, pinnedMessages = value.pinnedMessages, quotedMessage = value.quotedMessage, _d = value.read, read = _d === void 0 ? {} : _d, skipMessageDataMemoization = value.skipMessageDataMemoization, thread = value.thread, threadHasMore = value.threadHasMore, threadLoadingMore = value.threadLoadingMore, _e = value.threadMessages, threadMessages = _e === void 0 ? [] : _e, watcherCount = value.watcherCount, watcher_count = value.watcher_count, watchers = value.watchers;\n    var channelId = channel.cid;\n    var lastRead = channel.initialized && ((_a = channel.lastRead()) === null || _a === void 0 ? void 0 : _a.getTime());\n    var membersLength = Object.keys(members || []).length;\n    var notificationsLength = notifications.length;\n    var readUsers = Object.values(read);\n    var readUsersLength = readUsers.length;\n    var readUsersLastReads = readUsers.map(function (_a) {\n        var last_read = _a.last_read;\n        return last_read.toISOString();\n    }).join();\n    var threadMessagesLength = threadMessages === null || threadMessages === void 0 ? void 0 : threadMessages.length;\n    var channelCapabilities = {};\n    channelCapabilitiesArray.forEach(function (capability) {\n        channelCapabilities[capability] = true;\n    });\n    var memoizedMessageData = skipMessageDataMemoization\n        ? messages\n        : messages\n            .map(function (_a) {\n            var deleted_at = _a.deleted_at, latest_reactions = _a.latest_reactions, pinned = _a.pinned, reply_count = _a.reply_count, status = _a.status, updated_at = _a.updated_at;\n            return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n                var type = _a.type;\n                return type;\n            }).join() : '') + pinned + reply_count + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at))\n                ? updated_at.toISOString()\n                : updated_at || '');\n        })\n            .join();\n    var memoizedThreadMessageData = threadMessages\n        .map(function (_a) {\n        var deleted_at = _a.deleted_at, latest_reactions = _a.latest_reactions, pinned = _a.pinned, status = _a.status, updated_at = _a.updated_at;\n        return \"\" + deleted_at + (latest_reactions ? latest_reactions.map(function (_a) {\n            var type = _a.type;\n            return type;\n        }).join() : '') + pinned + status + (updated_at && (isDayOrMoment(updated_at) || isDate(updated_at))\n            ? updated_at.toISOString()\n            : updated_at || '');\n    })\n        .join();\n    var channelStateContext = useMemo(function () { return ({\n        acceptedFiles: acceptedFiles,\n        channel: channel,\n        channelCapabilities: channelCapabilities,\n        channelConfig: channelConfig,\n        error: error,\n        hasMore: hasMore,\n        loading: loading,\n        loadingMore: loadingMore,\n        maxNumberOfFiles: maxNumberOfFiles,\n        members: members,\n        messages: messages,\n        multipleUploads: multipleUploads,\n        mutes: mutes,\n        notifications: notifications,\n        pinnedMessages: pinnedMessages,\n        quotedMessage: quotedMessage,\n        read: read,\n        thread: thread,\n        threadHasMore: threadHasMore,\n        threadLoadingMore: threadLoadingMore,\n        threadMessages: threadMessages,\n        watcher_count: watcher_count,\n        watcherCount: watcherCount,\n        watchers: watchers,\n    }); }, [\n        channelId,\n        error,\n        hasMore,\n        lastRead,\n        loading,\n        loadingMore,\n        membersLength,\n        memoizedMessageData,\n        memoizedThreadMessageData,\n        notificationsLength,\n        quotedMessage,\n        readUsersLength,\n        readUsersLastReads,\n        skipMessageDataMemoization,\n        thread,\n        threadHasMore,\n        threadLoadingMore,\n        threadMessagesLength,\n        watcherCount,\n    ]);\n    return channelStateContext;\n};\n"]},"metadata":{},"sourceType":"module"}