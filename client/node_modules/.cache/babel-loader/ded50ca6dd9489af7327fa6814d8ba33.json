{"ast":null,"code":"var _jsxFileName = \"/home/sai/Desktop/DiscussIt/client/src/components/CreateChannel.jsx\";\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { UserList } from './';\nimport { CloseCreateChannel } from '../assets';\n\nconst ChannelNameInput = _ref => {\n  let {\n    channelName = '',\n    setChannelName\n  } = _ref;\n\n  const handleChange = event => {\n    event.preventDefault();\n    setChannelName(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-name-input__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: channelName,\n    onChange: handleChange,\n    placeholder: \"channel-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Add Members\"));\n};\n\nconst CreateChannel = _ref2 => {\n  let {\n    createType,\n    setIsCreating\n  } = _ref2;\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n  const [channelName, setChannelName] = useState('');\n\n  const createChannel = async e => {\n    e.preventDefault();\n\n    try {\n      const newChannel = await client.channel(createType, channelName, {\n        name: channelName\n      });\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-channel__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-channel__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'), /*#__PURE__*/React.createElement(CloseCreateChannel, {\n    setIsCreating: setIsCreating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), createType === 'team' && /*#__PURE__*/React.createElement(ChannelNameInput, {\n    channelName: channelName,\n    setChannelName: setChannelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(UserList, {\n    setSelectedUsers: selectedUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-channel__button-wrapper\",\n    onClick: createChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, createType === 'team' ? 'Create Channel' : 'Create Message Group')));\n};\n\nexport default CreateChannel;","map":{"version":3,"sources":["/home/sai/Desktop/DiscussIt/client/src/components/CreateChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","event","preventDefault","target","value","CreateChannel","createType","setIsCreating","client","setActiveChannel","selectedUsers","setSelectedUsers","userID","createChannel","e","newChannel","channel","name","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,cAAR,QAA8B,mBAA9B;AAEA,SAAQC,QAAR,QAAuB,IAAvB;AACA,SAASC,kBAAT,QAAmC,WAAnC;;AAEA,MAAMC,gBAAgB,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,WAAW,GAAG,EAAhB;AAAoBC,IAAAA;AAApB,GAAyC;;AAI/D,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAH,IAAAA,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,IAAA,KAAK,EAAEN,WAAd;AAA2B,IAAA,QAAQ,EAAEE,YAArC;AAAmD,IAAA,WAAW,EAAC,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ;AAQH,CAjBD;;AAmBA,MAAMK,aAAa,GAAG,SAAiC;AAAA,MAAhC;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAgC;AACnD,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAA6Bf,cAAc,EAAjD;AACA,QAAK,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,CAACe,MAAM,CAACI,MAAP,IAAiB,EAAlB,CAAD,CAAjD;AACA,QAAM,CAACd,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMoB,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACZ,cAAF;;AAEA,QAAG;AACC,YAAMa,UAAU,GAAG,MAAMP,MAAM,CAACQ,OAAP,CAAeV,UAAf,EAA2BR,WAA3B,EAAwC;AAACmB,QAAAA,IAAI,EAAEnB;AAAP,OAAxC,CAAzB;AACH,KAFD,CAEC,OAAMoB,KAAN,EAAY,CAEZ;AACJ,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,UAAU,KAAK,MAAf,GAAwB,sBAAxB,GAAiD,uBAArD,CADJ,eAEI,oBAAC,kBAAD;AAAoB,IAAA,aAAa,EAAEC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKKD,UAAU,KAAK,MAAf,iBAAyB,oBAAC,gBAAD;AAAkB,IAAA,WAAW,EAAER,WAA/B;AAA4C,IAAA,cAAc,EAAEC,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL9B,eAQI,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAEW,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,IAAA,OAAO,EAAEG,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,UAAU,KAAK,MAAf,GAAwB,gBAAxB,GAA2C,sBAA/C,CADJ,CATJ,CADJ;AAeH,CA9BD;;AAgCA,eAAeD,aAAf","sourcesContent":["import React, {useState} from 'react';\nimport {useChatContext}  from 'stream-chat-react';\n\nimport {UserList} from './';\nimport { CloseCreateChannel } from '../assets';\n\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\n    \n    \n\n    const handleChange = (event) => {\n        event.preventDefault();\n\n        setChannelName(event.target.value);\n    }\n    return (\n        <div className=\"channel-name-input__wrapper\">\n            <p>Name</p>\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\"/>\n            <p>Add Members</p>\n\n        </div>\n    )\n}\n\nconst CreateChannel = ({createType, setIsCreating}) => {\n    const {client, setActiveChannel} = useChatContext();\n    const[selectedUsers, setSelectedUsers] = useState([client.userID || '']);\n    const [channelName, setChannelName] = useState('');\n\n    const createChannel = async (e) => {\n        e.preventDefault();\n\n        try{\n            const newChannel = await client.channel(createType, channelName, {name: channelName})\n        }catch(error){\n\n        }\n    }\n\n    return (\n        <div className=\"create-channel__container\">\n            <div className=\"create-channel__header\">\n                <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\n                <CloseCreateChannel setIsCreating={setIsCreating}/>\n            </div>\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\n               \n           \n            <UserList setSelectedUsers={selectedUsers}/>\n            <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\n                <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateChannel\n"]},"metadata":{},"sourceType":"module"}